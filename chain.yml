models:
  Block:
    type: object
    properties:
      kind:
        type: string
        enum: [block]
        readOnly: true
      id: 
        type: string
      header: 
        $ref: '#/models/BlockHeader'
      executedMessages:
        type: array
        items:
          $ref: '#/models/ExecutedMessage'
  BlockHeader:
    type: object
    properties:
      kind:
        type: string
        enum: [blockHeader]
        readOnly: true
      id: 
        type: string
      height: 
        type: number
      minerId: 
        type: string
      messageListId:
        type: string
      recieptListId:
        type: string
      tickets: 
        type: array
        items:
          type: string
      electionProof:
        type: string
      parentTipsetId:
        type: string
      parentWeight:
        type: number
      stateRoot:
        type: string
      timestamp:
        type: number
      blsAggregate:
        type: string
      signature:
        type: string
  ExecutedMessage:
    type: object
    properties:
      kind:
        type: string
        enum: [executedMessage]
        readOnly: true
      id:
        type: string
        readOnly: true
      blockId:
        type: string
        readOnly: true
      message:
        $ref: 'chain.yml#/models/Message'
      exitCode: 
        type: number
        readOnly: true
      return: 
        type: object
        readOnly: true
  Message:
    type: object
    properties:
      kind:
        type: string
        enum: [message]
        readOnly: true
      id:
        type: string
        readOnly: true
      nonce:
        type: number
        readOnly: true
      from: 
        type: string
        readOnly: true
      to: 
        type: string
      value:
        type: number
      gasPrice: 
        type: number
      gasLimit:
        type: number
      method: 
        type: string
      parameters: 
        type: object
      signature: 
        type: string
        readOnly: true
  Tipset:
    type: object
    properties:
      kind: 
        type: string
        enum: [tipset]
        readOnly: true
      id:
        type: string
        readOnly: true
        example: 'zDPWYqFCyaQ9QJHr1qWZ19rFg3YRkcuXREkvpiHRJZhGN5T8SnyJ'
      height:
        type: number
      blocks:
        type: array
        items:
          $ref: '#/models/BlockHeader'  
endpoints:
  block_resource:
    get:
      operationId: getBlockById
      summary: Find block by ID
      description: Return information about the Block with the specified ID
      tags:
        - Blocks
      parameters: 
      - name: blockId
        in: path
        description: ID of the Block to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/models/Block'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'
  executed_message_resource:
    get:
      operationId: getExecutedMessageById
      summary: Find ExecutedMessage by ID
      description: Return information about the ExecutedMessage with the specified ID. An executed Message is one that has been included in a valid block in the chain. It includes return value and status information.
      tags:
        - Messages
      parameters: 
      - name: executedMessageId
        in: path
        description: ID of the executed message to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/models/ExecutedMessage'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'
  message_resource:
    get:
      operationId: getMessageById
      summary: Find Message by ID
      description: Return information about the Message with the specified ID
      tags: 
        - nessages
      parameters: 
      - name: messageId
        in: path
        description: ID of the message to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/models/Message'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'
  messages_collection:
    post:
      operationId: createMessage
      summary: Send a Message
      description: This method sends a new Message to an Actor recipient.
      tags: 
        - Messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/models/Message'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/models/Message'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'
  tipset_resource:
    get:
      operationId: getTipsetById
      summary: Fetch a Tipset by ID
      description: Return information about the Tipset with the specified ID
      tags:
        - Tipsets
      parameters: 
      - name: tipsetId
        in: path
        description: ID of the Tipset to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/models/Tipset'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'
  tipsets_collection:
    get:
      operationId: listTipsets
      summary: List Tipsets
      description: List Tipsets currently known to this node in reverse height order
      tags:
        - Tipsets
      parameters:
      - name: nextPageToken
        in: query
        description: Next page token
        required: false
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/models/Tipset'
        401:
          $ref: 'api.yml#/components/responses/UnauthorizedError'