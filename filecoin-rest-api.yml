openapi: 3.0.2
info:
  title: Filecoin JSON REST Chain API
  description: Filecoin JSON REST Chain API Description
  version: 0.1.0
servers:
- url: http://127.0.0.1:3453/api/chain/v0
paths:
  /version:
    get:
      summary: Return version info
      description: Fetch version information for the current node
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /tipsets:
    get:
      summary: List tipsets
      description: List tipsets currently known to this node in reverse height order
      parameters:
      - name: nextPageToken
        in: query
        description: Next page token
        required: false
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tipset'
  /tipsets/{tipsetId}:
    get:
      summary: Find tipset by ID
      description: Find a single tipset record by ID
      parameters: 
      - name: tipsetId
        in: path
        description: ID of the Tipset to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tipset'
  /block/{blockId}:
    get:
      summary: Find block by ID
      description: Find a single block record by ID
      parameters: 
      - name: blockId
        in: path
        description: ID of the Block to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /messages:
    post:
      summary: Send a message
      description: This method sends a new message to an actor recipient.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /messages/{messageId}:
    get:
      summary: Find message by ID
      description: Find a single message record by ID
      parameters: 
      - name: messageId
        in: path
        description: ID of the message to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /executed-messages/{executedMessageId}:
    get:
      summary: Find executed message by ID
      description: An executed message is one that has been included in a valid block in the chain. It includes return value and status information. Find a single executed message record by ID
      parameters: 
      - name: executedMessageId
        in: path
        description: ID of the executed message to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutedMessage'
components:
  schemas:            
    Block:
      type: object
      properties:
        kind:
          type: string
          enum: [block]
        id: 
          type: string
        header: 
          $ref: '#/components/schemas/BlockHeader'
        executedMessages:
          type: array
          items:
            $ref: '#/components/schemas/ExecutedMessage'
    BlockHeader:
      type: object
      properties:
        kind:
          type: string
          enum: [blockHeader]
          readOnly: true
        id: 
          type: string
        height: 
          type: number
        minerId: 
          type: string
        messageListId:
          type: string
        recieptListId:
          type: string
        tickets: 
          type: array
          items:
            type: string
        electionProof:
          type: string
        parentTipsetId:
          type: string
        parentWeight:
          type: number
        stateRoot:
          type: string
        timestamp:
          type: number
        blsAggregate:
          type: string
        signature:
          type: string
    ExecutedMessage:
      type: object
      properties:
        kind:
          type: string
          enum: [executedMessage]
          readOnly: true
        id:
          type: string
          readOnly: true
        blockId:
          type: string
          readOnly: true
        message:
          $ref: '#/components/schemas/Message'
        exitCode: 
          type: number
          readOnly: true
        return: 
          type: object
          readOnly: true
    Message:
      type: object
      properties:
        kind:
          type: string
          enum: [mxecutedMessage]
          readOnly: true
        id:
          type: string
          readOnly: true
        nonce:
          type: number
          readOnly: true
        from: 
          type: string
          readOnly: true
        to: 
          type: string
        value:
          type: number
        gasPrice: 
          type: number
        gasLimit:
          type: number
        method: 
          type: string
        parameters: 
          type: object
        signature: 
          type: string
          readOnly: true
    Tipset:
      type: object
      properties:
        kind: 
          type: string
          enum: [tipset]
          readOnly: true
        id:
          type: string
          readOnly: true
          example: "zDPWYqFCyaQ9QJHr1qWZ19rFg3YRkcuXREkvpiHRJZhGN5T8SnyJ"
        height:
          type: number
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockHeader'
    Version:
      type: object
      properties:
        kind:
          type: string
          enum: [version]
          readOnly: true
        version:
          type: string
          example: "1.0.2"
        commit:
          type: string
          example: "93540266a2a9972e91947a538ce70dc9c4e8077e"